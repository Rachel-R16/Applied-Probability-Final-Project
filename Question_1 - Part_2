import numpy as np
import matplotlib.pyplot as plt

# Parameters
T = 1  # Total time interval [0, 1]
num_simulations = 1000  # Number of Monte Carlo simulations
delta_t_values = [0.01, 0.001, 0.0001]  # Different values of delta_t


# Function to simulate temperature process and find Tmax
def simulate_temperature_process(delta_t):
    num_steps = int(T / delta_t)
    time_steps = np.linspace(0, T, num_steps + 1)
    X = np.zeros(num_steps + 1)  # Temperature process X(t)

    # Simulate temperature using random walk with normal distribution increments
    for i in range(1, num_steps + 1):
        X[i] = X[i - 1] + np.random.normal(0, np.sqrt(delta_t))

    # Find the time Tmax where X(t) is maximum
    Tmax = time_steps[np.argmax(X)]
    return Tmax


# Monte Carlo simulation for different delta_t values
for delta_t in delta_t_values:
    Tmax_values = np.zeros(num_simulations)

    for i in range(num_simulations):
        Tmax_values[i] = simulate_temperature_process(delta_t)

    # Plot the distribution of Tmax
    plt.hist(Tmax_values, bins=50, density=True, alpha=0.6, label=f'delta_t={delta_t}')

plt.title("Distribution of Tmax")
plt.xlabel("Tmax (Time when Temperature is Maximum)")
plt.ylabel("Density")
plt.legend()
plt.show()
