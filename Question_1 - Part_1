import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns


# Function to simulate the process and calculate proportion P
def simulate_proportion(dt, num_realizations=10000):
    N = int(1 / dt)  # Number of time steps
    P_values = []  # To store P for each realization

    for _ in range(num_realizations):
        # Simulate the temperature process X(t)
        X = np.zeros(N + 1)  # Initialize X(0) = 0
        Z = np.random.normal(0, 1, N)  # Generate standard normal increments
        X[1:] = np.cumsum(np.sqrt(dt) * Z)  # Calculate X(t) using increments

        # Calculate the proportion of time X(t) > 0
        P = np.sum(X > 0) / N
        P_values.append(P)

    return P_values

# Parameters
dt_values = [0.01, 0.001, 0.0001]
num_realizations = 10000

# Run simulations for different dt and store results
results = {dt: simulate_proportion(dt, num_realizations) for dt in dt_values}

# Plot results
plt.figure(figsize=(15, 10))
for dt in dt_values:
    sns.histplot(results[dt], kde=True, bins=50, label=f"Δt = {dt}", stat="density", alpha=0.7)

plt.title("Distribution of P (Proportion of Time Temperature is Positive)", fontsize=16)
plt.xlabel("Proportion P", fontsize=14)
plt.ylabel("Density", fontsize=14)
plt.legend(title="Time Increment Δt", fontsize=12)
plt.grid(alpha=0.3)
plt.show()

